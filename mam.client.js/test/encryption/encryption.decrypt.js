var chai = require('chai');
var assert = chai.assert;
var Encryption = require('../../lib/encryption');

describe('encryption.encrypt', function() {

    var tests = [
        { 
            cipher: "BQTX",
            key: "DASR",
            expected: "ASDF",
        },
        {
            cipher: "CFYKZHLHWMPXAAPJFVUZXHAKMWIUFZNQQGVBQ9FBLKKCBW9SKFNSVDKXMVTNQYCHKTTLTB9LHCYHU9COCBOKJJFWGYUAMLTGLPWEJEOBYOVPWMWFZQM9UQTJNFXQOYHLJND9GTTOMXVPRMSWXHOUXIVISUDDZIKSXNSBBJPT9YGEFPOORIVNCGFK9DSCTLLFJMPLJBYFJSXFDQYWVMXAVGMHIPBGVHTAKY9V9FSEJTP99VKLIFALMEMMVKBIT9ZOWNCTL9EXOWOLYQUOABPJOCQSRDKCAGMZNSTURGTVJPDLUDGJLSNSRJVQWJTVBBGTDAZUZHSSRWOVRPZBPKXHXPP9Y99JJJRTJDYPPVCSGZISBQUXFB9SIYMHUUAZFVZDOVYJGPISVUIYLWTJTVGMHQDUJVXEODAVOIRJSZKUMPNAHMIWDSVQPUJCHIFSCPKJIJZGFTHNBV9GW9BLSR9OUWMSMIXETGTPWSJGBHJLTOCWCAWQMN9JNSNLFHPTFMMIICFRLAQAKSGB9LIP9AVIOMPSIUQDRUQWFFXKKWAEASMCHWXYBROAUZRSQH9NPDWDZLPKQJSONRJHGXMLUQUJXHFJOXHTKPGKOZGESNLLVBEFKMRMFUESAQRGFDWARLEBYSPWBHRLS9SE9MOJPZHDYELNFMAAZBTKZBPCNRESGYRJACRT9UOTQ9AAQ9ROESDXCSXUTIUFEMVYPNNTISHBIXJOLZSYNKSU9GUGVWFVILFJOZPR9YKOSUWA9PBOUTXFOAHVRAVUMJLEZZOINANEUHLLWCGVIR9YJADHYMGJQOVBYIYYLDWBPCNKEAWAIIJBJMPSO9VHOXLQMFJSVPCMQLFAHFSIUQDRVREIECMNOYDWWANWQVQIMSVDFPZNNGBFXCLWOFNFEBPUN9WHZPBOJMNUCZFK9IYMBNYXIAYFGKWLVNJKNOLVXSQJKSGNDGIRUIGEPBAINHRWMPAAZVKPPFVQSJMVLOCXVAVIEVJAQKJK9EUBIJCEYJFQGVPLUZANVR9DGBMZWF9DFISLNPUCWIOAKPFDIDGYYEPCROUDJ9HOXSDWGGXQEBHRSEDBXPTEHCTSPTDCGNFRFLAOVCWFPESKNAWGGQCGHKLKZGKCZAIEOOT9XCAIQUXCMPML9YKTZYITENOJLRNYPBHMZSIAHWDMLLGTMJBVSDRBBWJWAKMWFZ9SEJEFBXOBRVFBKJBNYMTXSIHOYOLWKYUKPDYRTRMMJKUFEPLOPCEOBHWVMVNCDMZEMRFZAJBEEIDMYJKAY9ASTWOWXONUQUUFCIFDJBXHEGNWRYIQDMWTVJCQMRKMMWNYVJCGSAS9LP9RQUDSBM9UDNXVA9MNEZEGLWUPYVMXXUFXFGQLUHJJPCGQL9ZFKO9EFSQANISQHLMJQKAINHTDEKYYIFMXWE9LHRBPORRBZ9UGTMIYGAIIAHQRVIZLBYXQPQTGHVOEFJORBODLNVYQTRVDMSRVHKUEGAAVHWPMBYEWARHGMXDUGUXDDCOKTICHO9OQTYGHQZMGIRNB9KNFQL9FICDJIAPVFWKKSOSHW9UVDSVYABRCGHYVN9FFLX9BBGTCPTXYTR9TB9RWDMWAVJB9WNVJLIBJOHYULSUQTGNJNTXQUHINXGV9GWGAMQEUIJOHIJGJVBMIEBZQURQMCELAHDFKRANDLODQOSG9A9SYVKCZEOPQLTWNHRTAOJQZXQJHLDCXUOQWPXGI9QZJRGNXOVEHLZBHBXEDLWSGBNGROGHOVUVVYRWVGDGCVEQPSGHSIKKHRBHAZRJARWYJPT9XFP9UWSNSUUVRIHMOONBTAQ9NJOZKVQRTLYPXBMHVKDBKCOLVPXWXDVHULSVS9DKTWRYASMULAXC9SPXXV9RREBGADIFPJCAVOSPKUKKMGJQWQPJIMPODTHEWECVVUWVKEDGTYGTTONFQKXMDKSZPVBQLHGBQAIDFQIIO9RDAPZJLJTIRKFMFWMQIKUBZGTQQJTDKUMXQXULGXZQUOCSKDDZBKEFFLOOSTVYLFFADFVBMEGWEPNRQLJWRDASIBYCBEAN9RGULWASDYBZCMUAXIHUEILUBXBTNARUDOVEHSVZ9NDYZUJAZVUXQNIBZPIGZQGFJHACDOLASKYYECXBCTEAGIZJVFJQVXQFQLBOFILV9ZWSSGNCAZLLHWCC9FSHADYXOXABDUTCFUVAOMAROAYVUGWIVYHLDLOHMYCMTERNQEFPYEIEBOLTWXJJITW9CQTPXAAMODFACMTJXEQZEQYFQHFOFHOOSEXJXQX9TRQYGQUKOEGAXODZWUREAROL9KQGLSRYTFSLATFGJMAHHZMBWNPGIZGIXNEXMHKUXRPXWRGLMKJKDYW9BGRAGNINPNNEBXDGWJ9PU9WQZRFOTNNTCIAIFFAJFYEXZXBCEDEGMRDUSARJJOKJZBGIMASXQUAFRTMJIKWMABTUINVCGXKTDPVYEZBPXQEJWBUEXTYWZNUSTXUZ9PXGOXJBHBATPVFCK9YIODDGUIFFXPIO9OZQMQYEXIKKLYMXEOONLRPOZXRJTNYILBJAOSLNPWRMR9WQIOHQMXLAOXZXYWC99BUKT9IVRZNYDMZLZJYEVSXWMVUVA9YORAMPVUSLKKDFYAQSOXRYLOUDJNNLSZAEUJLSEW9TXRQEFMPBBNYLSJBTOELO9LBHUHQXCISEPXLBGYKOMRKQNDC9HMNIFFIFXYDULIOADACTKIXLZ9CUWXFSPPCPALFTILZCTXOWOGCJODTKMCLNRPXZIBVAETDJWUISAMFAFNEYQDUYAJOGXRIVPEYAYAQGFJXASZFROVCLIFCXOCENXJZBHFSODRKGHPDGZVLXIHGXTHEKCALFEAQITDANBK9NMESZXTLXJTYCCDSPUASBTZEHLTNWEHGVXKZZQSPTXGEMUTSEKXVKJGJAXONACCKDY9VHPIJXGMZAGCFXZSOHYQUYUOPBKDFEFIMHJRTRTGMXCGQZ9QYUHTIPM9OAWBWUHQWSHDKMJVMPPSAFEQMWG9LEYRVINLLCWLKKVESLMBDKTXNQOQKGQIJHP9HDYOEHVKHFFHYMIZXFSOT9CSCYGYFHYIGVHDWMSOZXPSHHPZOWAPUNOY9ZORYRIFHEWRPUXUUAGBENKDLTSHLQIFCHVS9IPKFKVBNERQKT9AFWLJZAHUMRJRU9GDQYVHHYCOMFBCZHGQHRYIQPHEHJEUMPVFRBAECZNWHGEPGKJBYKSVUXAYG9PSZLNNQWAGWLIZY9GPHXTYBEZJBEOOLBCCBRWWGEBFLPQKXNU9SALTAA9UXHMJAQJLRQD9YNDUISK9DKHQG9XIQDRKQNMWZEAUDFR9TKSYKKBVKANBN9XD9LZCGOJPMPPORBZIHJRIKJGJXYLERTTVCRU9IZNQJCTVGNK9NECFKJLCIXTYDJKH9GLPMX9PSEPWMGXCSOGQCNN9KHDEWVEMRRKDSFPMSXADGJFNSNLWEVEEGCGYPJQKYPV9INTEUWTAWHPPMLTAIQNNCVEROOA9BHCN9FS99XQOQFNTSN9KOSRPQAFVZEEGRDEWMLPCHYNYLFOZZQPKNJMAJTQQ9YHVSKYAMHTZ9GXIR9BNSOJTSCHHKGEAKJDANUUKGZXUNXXLHWRSDGEXDJJYXDTMFXLS9UDYNRKDUJOVIWWYYQUQQCPXOUSTORCANODRKFEOOEGVJMJIGXVNBPHKTJPUMMQQMRBQTZQOXOPQENTHSCPKOAOCORONLAJETTVWMKBUU9FIXBNFUVUXOEFYKGRSUGMBVQJQEW9ECUTTDMGSYVZEETVHFYWPHCOCMEUVBPYGCRDGAXZXWEHGARCNRVPGTKXKMODPZMWLRXEINIHAWGXGFFNZSOGWBELTGUFRVKLNMREFNTCLDJBNTMIYCXZNMVLTXTRYHUDMVZROAYBFEHRHKRPJRS9F9XSSUHFXGYVDBHISCHYEFIX9JCHSVPFREPXBQJFQDYFAUMFDCZVYGHNJDRLHXDXUGHTDGGWGGZXFSSOASCCDWYLVTNSQWUJMV9YOPEJCVLOJCEPIFOARYRKRQFAUWPVVVHZMYOWIUFEMMLGCXNUOTAWOPC99ZEAXTA9EIPEZZFWLBTORRSGMB9RSUHEZWHXOGJGXDK9HQFULKBEVQJGCLLFAGQVHOGPFAWOTD9AKO9OP9EINBSTHFYCVWOIGVETJGFABRYSNRHYIRLSIVEVJI9XNGCHWBYSVCZPBBRB9NQSSAPLXGMX9VOGQXFOCHZALRZWPHIHNSTFTSARPRHNPLNIJWQSWQYJTFHVCBNSDNLTTCK9JILBVTIAPZPSDDIWCHBEMUATURM9WNGHOCCSBGQFKNGHMSMNQQLIPMPYEAJBBMZEJMEVZCPTJQ",
            seed: "JLHQLDCYRVNJVOOUQ9DDZXJYOQVODPXS9XPXDLTLAOIAYANJZOM9KHLFUVLARJKLBVH9GPYFKKACWRUQL",
        }
    ]

    tests.forEach(function(test) {

        it('should create cipher from: ' + test.cipher + ' with key ' + test.key + ' that equals: ' + test.expected, function() {
            if(test.seed) {
                var key = Encryption.key(test.seed, 1, 1, test.cipher.length*3);
                var text = Encryption.decrypt(test.cipher, key);
            } else {
                var plain = Encryption.decrypt(test.cipher, test.key);
                assert.equal(plain, test.expected);
            }
        });
    })
});
